[
  
  {
    "title": "Resolute - HackTheBox Walkthrough",
    "url": "/posts/Resolute-HackTheBox/",
    "categories": "",
    "tags": "Write-Ups",
    "date": "2022-03-23 00:00:00 +0500",
    





    "snippet": "IntroductionHello again. Today I will be looking into a medium box based on active directory from HackTheBox made by egre55. This box starts with an easy foothold. The password is retrieved from RPC which gives us initial access. Then we move over to ryan user which is a part of DNS Admins group that has a priv esc route. Lets get into it.EnumerationNmap scan shows a lot of ports open. But the noteable ones are, DNS, WinRM, LDAP, And a bunch of RPC ports showing that it may be a domain controller. For a full port scan list you can refer to this.So first lets enumerate LDAP and see if we can leak some information about the machine.It outputs a lot of information but the important one is that it gives us a domain name. We can add it to our /etc/hosts file. I tried looking for other domain names but no luck.Now we can enumerate RPC and see if that leaks any information.And it works! We have a list of users we can save. We can look at the groups too.We see all the normal ones except the “Contractors” group. Lets see whose part of that group.We see it only has one member Ryan Bertrand. Its good to keep it in the back of your head.Now another thing we can do is display decription of user accounts. Maybe they contain passwords? Lets see.And we do have it! We can use the list of users and this password to do password spraying and see it if actually gets us access into anything. I’ll use CrackMapExec for that.Okay so after many errors we have one user. But it doesnt say pwned. Which means we can use something like psexec to get a shell in it. But we do have WinRM open on the box. We can try that using crackmapexec too.We got it! We get the pwned sign which means we can get a shell now using Evil-WinRMFirst thing we can look for is user.txt and retireive it. Lets look into users that have a home directory.And we have ryan user. Which makes me wonder maybe we’re supposed to escalate to this user before actually getting root. After several rabbit holes I used the command that shows the hidden files in powershell. And I found a folder named PSTranscripts.I used the WinRM’s download feature to get the powershell script I found.And we find a password for ryan user.We can use it to get a shell using WinRM now.Now we can see the permissions and privileges the user Ryan has.We have the user ryan in the DNS Admin group. Which can be vulnerable and is explained in this article. So following the steps, we can try to escalate our priviliges to administrators. Making the malicious DLL and staring a SMB Server.Now we can inject the DLL and restart the service to see if we can get a shell back.And just like that we’re ROOT!! We can now get the root flag and submit it!If you have suggestions or if you wanna talk about anything. Contact me from the info in the footer. Till next time!"
  },
  
  {
    "title": "Funbox Part 4",
    "url": "/posts/Funbox-Part-4/",
    "categories": "",
    "tags": "Write-Ups, Funbox Series",
    "date": "2021-08-28 00:00:00 +0500",
    





    "snippet": "IntroductionThis box is the 4th part of boxes in a series named as Funbox. You can find the series here and if your’e looking for this paticular box, here. This one is also made by 0815R2d2.This one starts out with a robots.txt file with a hidden directory. Which has upload functionality that takes our shell and gives us access in the machine. The root path is linux kernel exploitation. Let’s see it through.EnumerationStarting out with the port scan:rustscan -a 192.168.57.45 -r 1-65530 -- -A -sC -vvv -oN initialNot putting the whole output because it feels messy but these are the ports that were open:22\t\tssh\t\tOpenSSH 7.2p2 Ubuntu 480\t\thttp\tApache httpd 2.4.18110\t\tpop3\t\tDovecot pop3d143\t\timap\t\tDovecot imapdOkay so let’s see. We have SSH which we noramlly wouldn’t look into because it’s usually clean and not the initial foothold method. In any other case, you should actually looks into it because this may lead to some information disclosure. Let’s start with port 80. It has a default Apache web page. Directory bruteforcing wasn’t getting me anywhere either. I tried looking at robots.txt, nothing ther either. I tried robots.txt but in all uppercase as, ROBOTS.TXT, and found the robots file.But looking into ‘upload/’ dir didn’t gave me anything. So I took another look at the source code of robots file, and saw a hidden directory at the very end.going into this directory shows a 403 Forebidden. But we could try a directory scan in here.And we can see the upload directory which we saw earlier in robots file right here. Along with a couple of upload pages. Let’s go to the first one and try to upload a shell.And it looks like our shell was uploaded. So we know we can’t view the uploads dir, but we can try to go to the ‘/upload/shell.php’ and see if we get a call back.And we get a shel in here! If you’re wondering what Pwncat is, it’s an amazing tool for reverse shells. I wrote a bit on it in the previous blogpost here.Back to the box. For some reason, linpeas or linenum wasn’t working for me. So I tried to look for kernel versions to see if we can find an exploit for it. And I indeed did find it. Here was the exploit for it, CVE-2017-16995. After compiling it I uploaded it on the machine and executed it.And yes we get root! Don’t mind the partially broken shell. We can go get the root flag.Let me know if you have any suggestions for the blog or anything. My contacts are in the footer. I’ll see you in the next one!"
  },
  
  {
    "title": "Doc - HackMyVM",
    "url": "/posts/Doc-HackMyVM/",
    "categories": "",
    "tags": "Write-Ups",
    "date": "2021-08-27 00:00:00 +0500",
    





    "snippet": "IntroductionThis is an easy room on HackMyVM made by sml. You can find this room at Doc - HackMyVM.This is a simple machine that has a web server using a vulnerable program that we can exploit to gain a initial foothold. The root part after it was pretty cool. I admit I also had to ask for a nudge to look at it clearly which helped me exploit it and get a root shell. Let’s walk down the lane and see how it works.Enumeration80/tcp open  http    syn-ack nginx 1.18.0Okay so all we see is one port which is 80 open and it has a website on it. Going over to the actual website, we see this.ExploitationSo its using Online Traffic Offense Management System - PHP on the website. We can look for exploits that might have been available on google. And we find a Unauthenticated RCE exploit on the same app. Couldn’t get more better than this.Also by going to the Login page on the Vulnerable website, We can see that it points to a domain “doc.hmv”. We can add it to our /etc/hosts. Now let’s run the exploit.And here it is. We have what seems like a webshell on the box. Let’s get a pty shell going on so we can stablize it and work with it.So I dont know if you’ve heard of it, but there’s this really amazing tool called Pwncat which is made by Caleb Stewart and John Hammond and trust me, it is absolutely beautiful. Makes you life hella easy. It automatically stablizes the shell and makes upload and downlaoding from the connected machine a lot easy. It has alot of other features as well. I would suggest you watch this video in which both Caleb and John present Pwncat to get a better insight in the power of the tool, Introducing Pwncat: Automating Linux Red Team Operations. Okay back to the box.I used the great Revshell website to generate a Python3 reverse shell.And we recieve a shell back to our pwncat.Okay so from here on we can use CTRL+D to interact with the active session. We have www-data user and th eother user is bella. We can upload the linpeas binary to get a good look at what we can use for our advantage. Just to show you how easy it is to upload linpeas I’ll upload it in the /tmp directory.(Garry says ignore the typo or I’ll steal your lunch money) I got a new keyboard I’m still trying to get used to it.The linpeas output shows the user bella’s SQL Password.I thought to try it as the user password as well and We get in the user bella!Privilege EscalationFrom here on we can use sudo -l to see what we can run as root. And we see a weird binary doc that we can run.When we run it, I couldn’t see anything that might resemble this program. It was seemingly running a webserver locally on port 7890 with only 2 options. Either browse or quit. It didn’t make sense. I tried to curl it after running the webserver to see what it actually serves. It was some sort of Pydoc’s Index of Modules. And I was stuck. I asked in the Discord for a nudge and the creator of the box sml suggested to check for strings in the program to see what is actually doing.This made everything clear. I found that the command it was running was ‘PyDoc3.9 -p’.And a simple Google search led me to this article CVE-2021-3426: Information disclosure via pydoc -p. This explains how “/getfile?key=” parameter is vulnerable and other users can see arbitratry files on the server.So I used curl to get the root flag using the same method.And we can see the Root Flag in the HTML.And we’re done! It was a pretty good box with a nice way to root. As always let me know if you have suggestions for the blogs or if you just wanna talk about anything. My contact info is in the footer. Till next time!"
  },
  
  {
    "title": "Funbox Part 3",
    "url": "/posts/Funbox-Part-3/",
    "categories": "",
    "tags": "Write-Ups, Funbox Series",
    "date": "2021-08-22 00:00:00 +0500",
    





    "snippet": "IntroductionPart 3 of a series of machines Funbox, which can be found here created by 0815R2d2.This is also a boot2root machine with a lot of rabit holes and can really cause a headache if you’re too focused. But fortunately didnt happen with me by chance. Starts off with a book store what has default creds and a shell being uploaded to the website. Getting in it was pretty easy to get SSH access as user and then ‘sudo -l’ gives off privilege escalation tricks. Let’s go.EnumerationUsing rustscan for port scan:rustscan -a 192.168.57.36 -r 1-65530 -- -A -sC -vvvNot putting the whole output because it feels messy but these are the ports that were open:22\t\tssh\t\tOpenSSH 8.2p1 Ubuntu 4ubuntu0.180\t\thttp\tApache httpd 2.4.4133060\tsql\t\tmysqlxThe HTTP website also hints at ‘/gym’ directory which is in robots.txt. But just to be going through my methodology I’ll start a gobuster scan as well.The website shows a default webpage of apache. But my directory scan shows a lot more.ExploitationOkay there’s a lot to go through. But I started with the obvious ones first. ‘/admin’ looks good. Looked around, tried some default passwords. Nothing worked. Okay instead of wasting time here, let’s move on. ‘/secret’ seems sus. But it did’nt have anything other than a quote. We already know what robots.txt has. And I thought that obviously this looks like the only good way of entry. So let’s eliminate the others first. MOving on to ‘/store’, there is a admin login page as well. Tried default password of ADMMIN:ADMIN and oh we’re in!By looking at what we can edit in a book, I found that we can also add a image as book cover. Hmm.. Does it take anything other than a image? Let’s upload a reverse shell php and test it.Ooop. Looks like it worked. To find where exactly did it go, I tried to view the image of any other book cover and found it.And it gave us a shell.Spawning a PTY Shell and stablizing the shell for better viewingLooking around I found a tony directory in home directory. Which contained a ‘password.txt’ file. And this file contained SSH password for the user tony.Privilege EscalationSo we SSH into the Tony user and use the command ‘sudo -l’ to see what this user can run as sudoOkay we have a lot of things here. The best one that I see first is ‘pkexec’. I have done this before and I know how we can use it to gain a root shell. Using the same method.And just like that this really easy machine is pwned. I’m glad I didn’t go through the robots.txt rabbit hole becasue I know I would have wasted a lot of time on it. But anyways Part 3 is done. I’ll see you in the next part. And as always if you ever need to contact me my contacts are down in th e footer below."
  },
  
  {
    "title": "Funbox Part 2",
    "url": "/posts/Funbox-Part-2/",
    "categories": "",
    "tags": "Write-Ups, Funbox Series",
    "date": "2021-08-18 00:00:00 +0500",
    





    "snippet": "IntroductionThis is another easy rated box from Vulnhub created by 0815R2d2. Its the second part of a series of boxes called Funbox. Heres a link to this one and you can find the series on this page too: Funbox 2.Its a simple machine that starts off with a lot of work. This box is fairly easy and doesnt take long once you get through the initial part. You’ll know what I’m talking about. After getting initial foothold you find the password for the user and then the classic ‘sudo -l’ process to get to root. Let’s begin!EnumerationAs usual starting with the port scan we use Rustscan to scan the machine for open ports and we can find 3 ports open. 21 for FTP, 22 for SSH and 80 for HTTP.rustscan -a 192.168.57.30 -r 1-65530 -- -A -sC -vvv PORT      STATE SERVICE REASON  VERSION 21/tcp open  ftp     syn-ack ProFTPD 1.3.5e| ftp-anon: Anonymous FTP login allowed (FTP code 230)22/tcp    open  ssh     syn-ack OpenSSH 7.6p1 Ubuntu 4ubuntu0.5 (Ubuntu Linux; protocol 2.0) 80/tcp    open  http    syn-ack Apache httpd 2.4.29 ((Ubuntu))| http-methods: |_  Supported Methods: GET POST OPTIONS HEAD| http-robots.txt: 1 disallowed entry |_/logs/|_http-server-header: Apache/2.4.29 (Ubuntu)|_http-title: Apache2 Ubuntu Default Page: It worksSo let’s start with the obvious FTP which has Anonymous Login enabled.We have a lot of zip files with random usernames available.If we see the hidden listings as well, we can find a ‘.@admin’ file among them.The file was encoded in base 64 so I used the Base64 command to decode it.And this where the work begins… I don’t know if there was a way to make it easier or not, but I tried unzipping the zip file, then when it wasn’t working used zip2john to get a hash and then tried to crack the hash using John the Ripper and Rockyou.txt. And I repeated it with every single one of them.. And the funny thing is, I didn’t do it in order I was going randomly choosing. And I chose the one that actually work in the very last smh…Here is it if it saves some time for you.ExploitationWe get a id_rsa file. Change the permissions on the file and then use it to login to SSH to get initial foothold.And look what we get here. A ristricted bash shell. Just like in the last box. Used the same command as the last one to break out of it.After this the very first thing I did was look if we have a hidden file in our or if there is another user’s directory. And I see something odd. The MYSQL_History file. I did ignore it for the first time and ran Linpeas around. But when I did’nt see anything good, went back the the history file and sure enough we found a clear text password in there.Privilege EscalationTo make it clear, the password is whatever is in read. the 040 is not in the password.After getting the password I ran the classic ‘sudo -l’ to check sudo permissions and woah.. this guy can run any and all commands as root which makes it very easy for us. ALl we need to do is;And just like that we rooted yet another Funbox Series Machine. Let me know if you liked it or want to give suggestions about the blog. Everything is welcomed. My contacts are in the footer right there. See you in the next one!"
  },
  
  {
    "title": "Funbox Part 1",
    "url": "/posts/Funbox-Part-1/",
    "categories": "",
    "tags": "Write-Ups, Funbox Series",
    "date": "2021-08-14 00:00:00 +0500",
    





    "snippet": "IntroductionThis is a box rated easy from Vulnhub released on 20-Jul-2020, created by 0815R2d2. Its a part of a series of boxes called Funbox. Heres a link to this one and you can find the series on this page too: Funbox 1.The machine is a boot2root type machine in which we start from a simple user gained through bruteforce and move to another user to find a way to root a box. Pretty fun box. Learned a lot. Very good for beginners. Let’s get to it now shall we?EnumerationSo I was trying to do a complete enumeration on this box and try to find as many exploitation ideas I could get. Let me walk you through the process..Starting with the obvious port scan. I used Rustscan by the very best Bee-Sec-San to do the port scanning because its pretty fast. You can get it from here. Here’s the command I used:rustscan -a 192.168.57.22 -r 1-65530 -- -A -sC -vvv PORT      STATE SERVICE REASON  VERSION 21/tcp    open  ftp     syn-ack ProFTPD22/tcp    open  ssh     syn-ack OpenSSH 8.2p1 Ubuntu 4 (Ubuntu Linux; protocol 2.080/tcp    open  http    syn-ack Apache httpd 2.4.41 ((Ubuntu))| http-methods:|_  Supported Methods: GET HEAD POST OPTIONS| http-robots.txt: 1 disallowed entry|_/secret/|_http-server-header: Apache/2.4.41 (Ubuntu)|_http-title: Did not follow redirect to http://funbox.fritz.box/33060/tcp open  mysqlx? syn-ackI found 4 Ports open. Port 21 for FTP, Port 22 for SSH, Port 80 for HTTP, Port 33060 for MySQL.And from here I started to enumerate each service one by one. Starting by FTP.I tried Anonymous Login first but it was disabled.Next I tried finding the version of FTP so we could look for exploits if available. I found that Metasploit has a auxiliary module for it.So I ran it to see for FTP Version information.Hmm.. Looks like we don’t get much information here. Let’s move to SSH for now.So our scan results show that OpenSSH Version 8.2p1 is being used. Let’s look it up searchsploit.Didn’t find anything that looks interesting.Moving over to Port 80 which has a website hosted. Found a WordPress website.We also found the same URL we had seen in the Nmap scan results if you looked closely. Time to add it up in the /etc/hosts file of ours.Um.. I’m not sure if adding all the possible variations of the somain is good practice or not. I’m a noob. Maybe ask Google about this more before following as I will do the same as well.So it being a WordPress website let’s run a wpscan and see what we have here.And while the wpscan is running, let’s go ahead and check that robots.txt file we saw earlier in our port scan. You may or may not have missed it. But it was here.Visiting the robots.txt shows us a /secret/ directory being disallowed. This looks very good.Lets try to see what it is.Okay that was nothing. I still looked around but found othing. Just a rabbit hole.Okay back to the WPScan. The scan gave out 2 usernames. Joe and Admin.ExploitationWe can use this to perform a bruteforce attack againt the two users. I ran them one by one but it’s possible to do 2 at the same time. Starting with the user Joe. Used the RockYou.txt as a wordlist and got the results.And we got a hit. The user Joe’s password.(I accidently deleted the photo so used this editing photo XP)Logged into Wordpress and saw that the user Joe has very limited access.Started looking for vulnerabilities I could find for the WordPress version. At the same time I also started running another bruteforce attack on the user admin using the same wordlist.Couldn’t find anything on the Wordpress version but we actually got a hit on the admin user on bruteforce.So logged in using admin credentials. Tried to upload the reverse shell in 404.php page. But I couldn’t.So at this time I thought about Password Reusing. Maybe either Admin’s or Joe’s password is also being used at the SSH Service? Well I tried the user Joe with his password. And I got in.Coming in tried to go a directory back and see what other users we may have. But this was a restricted bash shell.Could confirm this using:I used pyhon to spawn another shell as bash and escape the rbash shell. Using this command:Okay so now we can look around. In our hone directory I couldn’t find anything.I tried to do a ‘sudo -l’ to see if we have something in the sudoers file. No luck.So I looked at the /etc/passwd file to see what other users we might have.Privilege EscalationOkay so we have another user ‘Funny’ with their own home directory. Let’s look what we have in there. And we can see a backup script in there.Okay so anyone can read, write and execute this file. That’s good. We can upload a reverse shell in there and see if we get a call back. But we need to be sure if we will be getting a call back. I cant see the cronjobs from this user so we will put pspy64 binary on the machine and see if there’s something worth our while.Wait thats strange. It confirms that there is a cronjob running. But looking at this, it looks like the cron job is running once with UID:1000 and once with UID:0. Which means its running once with user funny as once as root user.This means if we wait after uploading our shell, we can get root access. Let’s test this out. First to generate a reverse shell, I’ll be using the Revshells Website by the very talented and awesome Ryan Montgomery.Pretty easy when using the website. Okay so we write it to the backups script.And now we wait. After about 2 minutes and a couple of tries.. We got ROOOT! We finally successfuly pwned the box.Let me know if you liked it. My contacts are in the footer. Hope you enjoyed. All criticisms are welcomed btw. Let me know how I can make it better. Will be continuing this Funbox Series in the future (hopefully). See you in the next one!"
  },
  
  {
    "title": "Overpass 2 - Hacked",
    "url": "/posts/Overpass-2-TryHackMe/",
    "categories": "",
    "tags": "Write-Ups",
    "date": "2021-08-03 00:00:00 +0500",
    





    "snippet": "IntroductionThis room is created by NinjaJc01 and focuses on PCAP Analysis and Forensics side. Here’s a link to the Room: Overpass 2 - Hacked.  Overpass has been hacked! The SOC team (Paradox, congratulations on the promotion) noticed suspicious activity on a late night shift while looking at shibes, and managed to capture packets as the attack happened.Can you work out how the attacker got in, and hack your way back into Overpass’ production server?So this hints what we would have to do. Analyze a PCAP and retrace the steps to get back in the server.AnalysisWe start with a PCAP File. We can analyze this file using Wireshark Tool. Lets fire it up.The first question we get is:  What was the URL of the page they used to upload a reverse shell?To see the URL to which the shell was uploaded we can see the requests made using this wireshark filter:With this we can see the requests made to the website and also where the shell was uploaded.We will have the answer to our first question right here.  What payload did the attacker use to gain access?This can also be found in the same filter. Look for a POST Request. And from there see at the data that was uploaded. You can see the payload that was used for initial access.   What password did the attacker use to privesc?To see more information on the pcap, We can look for  “tcp.eq.stream == 3” .From here just do “Follow TCP Stream” or CTRL+SHIFT+ALT+T to follow the TCP Stream. You can see the password used by the attacker by analysing the TCP Stream.  How did the attacker establish persistence?Using the same TCP Stream, We can find the backdoor that the attacker used and what the code is.  Using the fasttrack wordlist, how many of the system passwords were crackable? Just above this we can see that the attacker dumped the shadow file. We can see the hashes of 5 users. We can use John to crack these hashes from the fasttrack.txt wordlist as asked in the Task.ResearchIn this section we are supposed to research the code that the attacker used to gain persistence on the server. We already have the link so we can just clone the repository on our local machine to research the code.  What’s the default hash for the backdoor?We can open up sublime or any other text editor you prefer to read the code. GO Language is a programming language but you dont need to have programming knowledge to read the code and answer the questions. When we open it we can see the default hash right away.  What’s the hardcoded salt for the backdoor?At the very end of this program, we can see the salt used for the backdoor.  What was the hash that the attacker used? - go back to the PCAP for this!To get the answer of this we need to go back to the PCAP File. Right where we left. At the part where the attacker set the persistence up. We can see what salt he used.   Crack the hash using rockyou and a cracking tool of your choice. What’s the password?Okay sow let’s get cracking. We can use Hashcat to crack this hash. This is a SHA-512 hash. And we have the salt as well. So we will append the salt next to the hash so it appears liken this ”&lt; hash &gt;:&lt; salt &gt;”. Now we can use Hashcat on it. I already ran it so I’m adding the –show tag in it as well. You dont need to use it.AttackOkay so we have enough information now. We can use the information we gathered to get back in the server. Lets get to the tasks of this section.  The attacker defaced the website. What message did they leave as a heading?Remember what we did in the Task 2? I did the same again and got a request to  “Index.HTML”. In it we can see what the hacker wrote on the website. (Easy solution is to go to the address and see the website in browser ;) )  Using the information you’ve found previously, hack your way back in!We know that the attacker uploaded a backdoor on SSH. We can use the sam eto get back in again. We already cracked the password used to setup the backdoor. Also a thing to note, when we see the hash in Task 1 of Section 2, we can see the port that is being used for the backdoor. Its on Port 2222. Lets get in the server.  What’s the user flag?And we’re in! Let us get the User Flag.  What’s the root flag?We can see a file using SUID Permissions in the user’s home directory.Searching about it on GTFOBins, we can see this paaragraph that gives us a hint on how to exploit it.So we use this “-p” flag and see if we can get a root shell.Aaand we’re ROOT! The machine is pwned. Submit the flags and get the points. Let me know if theres something you want to mention about the blog or anything in general. I’ll be happy to talk! :smile:"
  },
  
  {
    "title": "Inclusion - TryHackMe",
    "url": "/posts/LFI-TryHackMe/",
    "categories": "",
    "tags": "Write-Ups",
    "date": "2021-07-29 00:00:00 +0500",
    





    "snippet": "This is a room best for beginners to understand and exploit LFI Vulnerabilty. If you want to follow along, You can join the room here, InclusionEnumeration:First of all I ran the NMAP scan and found 2 ports open. Here’s what I found:└─$ nmap -A 10.10.186.213 -p- -vvv               Starting Nmap 7.91 ( https://nmap.org ) at 2021-04-12 20:54 PKTNmap scan report for 10.10.186.213 (10.10.186.213)Host is up (0.28s latency).PORT   STATE SERVICE VERSION22/tcp open  ssh     OpenSSH 7.6p1 Ubuntu 4ubuntu0.3 (Ubuntu Linux; protocol 2.0)| ssh-hostkey: |   2048 e6:3a:2e:37:2b:35:fb:47:ca:90:30:d2:14:1c:6c:50 (RSA)|   256 73:1d:17:93:80:31:4f:8a:d5:71:cb:ba:70:63:38:04 (ECDSA)|_  256 d3:52:31:e8:78:1b:a6:84:db:9b:23:86:f0:1f:31:2a (ED25519)80/tcp open  http    Werkzeug httpd 0.16.0 (Python 3.6.9)|_http-title: My blogService Info: OS: Linux; CPE: cpe:/o:linux:linux_kernelService detection performed. Please report any incorrect results at https://nmap.org/submit/ .Nmap done: 1 IP address (1 host up) scanned in 24.28 secondsOkay so port 80 is open for http. Before I go and manually look, lets fire up dirsearch. Dirsearch did not find anything. But in my enumeration of the website, I found it to be vulnerable to LFI.The parameter  article?name=was vulnerable to LFI.ExploitationI tried reading the /etc/passwd file and I could see the contents.  http://10.10.186.213/article?name=../../../../../../../../../../etc/passwdIt returned this:root:x:0:0:root:/root:/bin/bashdaemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologinbin:x:2:2:bin:/bin:/usr/sbin/nologinsys:x:3:3:sys:/dev:/usr/sbin/nologinsync:x:4:65534:sync:/bin:/bin/syncgames:x:5:60:games:/usr/games:/usr/sbin/nologinman:x:6:12:man:/var/cache/man:/usr/sbin/nologinlp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologinmail:x:8:8:mail:/var/mail:/usr/sbin/nologinnews:x:9:9:news:/var/spool/news:/usr/sbin/nologinuucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologinproxy:x:13:13:proxy:/bin:/usr/sbin/nologinwww-data:x:33:33:www-data:/var/www:/usr/sbin/nologinbackup:x:34:34:backup:/var/backups:/usr/sbin/nologinlist:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologinirc:x:39:39:ircd:/var/run/ircd:/usr/sbin/nologingnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologinnobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologinsystemd-network:x:100:102:systemd Network Management,,,:/run/systemd/netif:/usr/sbin/nologinsystemd-resolve:x:101:103:systemd Resolver,,,:/run/systemd/resolve:/usr/sbin/nologinsyslog:x:102:106::/home/syslog:/usr/sbin/nologinmessagebus:x:103:107::/nonexistent:/usr/sbin/nologin_apt:x:104:65534::/nonexistent:/usr/sbin/nologinlxd:x:105:65534::/var/lib/lxd/:/bin/falseuuidd:x:106:110::/run/uuidd:/usr/sbin/nologindnsmasq:x:107:65534:dnsmasq,,,:/var/lib/misc:/usr/sbin/nologinlandscape:x:108:112::/var/lib/landscape:/usr/sbin/nologinpollinate:x:109:1::/var/cache/pollinate:/bin/falsefalconfeast:x:1000:1000:falconfeast,,,:/home/falconfeast:/bin/bash#falconfeast:rootpasswordsshd:x:110:65534::/run/sshd:/usr/sbin/nologinmysql:x:111:116:MySQL Server,,,:/nonexistent:/bin/falseAnd there was a comment in the /etc/passwd file.  falconfeast:rootpasswdThis looks like credentials, so lets use them for SSH into Falconfeast.And it worked!We’re in Falconfeast. The “user.txt” file is right in the home directory:609************And the first thing we do is run the command:sudo -land we get:User falconfeast may run the following commands on inclusion:    (root) NOPASSWD: /usr/bin/socatWe know that we can escalate privileges to root using SOCAT. So go over to GTFOBINS and search for SOCAT. We found this:  sudo socat stdin exec:/bin/shWe use this and BOOM! We are ROOT!Root flag:429********Let me know if you like it or would like to let me know something from the contact links below ; )"
  },
  
  {
    "title": "Gift - HackMyVM Walkthrough",
    "url": "/posts/Gift-HackMyVM-Walkthrough/",
    "categories": "",
    "tags": "Write-Ups",
    "date": "2021-07-19 00:00:00 +0500",
    





    "snippet": "Gift is a really easy machine from HackMyVM created by sml. Perfect for beginners and the ones just started in the field. Here’s my write Up..So we start off with an nmap scan, which i already ran and saved as “Initial”:I see port 80 open and a website on it. Let’s see whats on it.Oh okay. That’s something. Let’s take a look at the source code of the website.Well I definately don’t. This seemed strange to me. I ran a nikto scan as well thinking it might bring up something. But nothing of much use.I started a Directory scan with gobuster and this also turned nothing!!So by now I was confused. It wasn’t making much sense. But I ran a Hydra ssh Brute Force and we got it.It literally was “Simple” (heh). Let us SSH in the machine.Aaaaaand we’re in. We’re also “Root” user so we can just get the both flags from the “/root” directory.And that’s it. We pwned the machine. Let me know if you liked the write up or you want to give me any suggestions. You can find me on my socials below in the footer.  I’m new in writing walkthroughs and writeups. pls go easy one me.. :wink:"
  },
  
  {
    "title": "Panic At The Disco - Stego Challenge",
    "url": "/posts/Panic-At-The-Disco-Stego/",
    "categories": "",
    "tags": "Write-Ups",
    "date": "2021-06-13 00:00:00 +0500",
    





    "snippet": "Here we are given a simple png file.So as some of the first checks, I ran string on itstrings PandeAtTheDisco.pngAnd found what looks like a base64 encoded string:ZmxhZ3thcHBvbHNfYXJlX3Rhc3R5fQ==So i used the base64 -d command on terminal to decode it and get the flag!And voila! we get the flag!"
  }
  
]

